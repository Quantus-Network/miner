name: Release (Tauri)

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-[a-zA-Z0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  verify-versions:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.out.outputs.version }}
      tag: ${{ steps.out.outputs.tag }}
    steps:
      - name: Checkout (push)
        if: github.event_name == 'push'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Read versions
        id: out
        run: |
          TAG="${GITHUB_REF##*/}"            # vX.Y.Z
          SHA="$GITHUB_SHA"

          if [ -z "$TAG" ]; then
            echo "Could not determine tag for commit $SHA"
            exit 1
          fi

          VER="${TAG#v}"                     # X.Y.Z
          echo "version=$VER" >> "$GITHUB_OUTPUT"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"

          PKG=$(node -p "require('./package.json').version")
          TAURI=$(node -p "JSON.parse(require('fs').readFileSync('src-tauri/tauri.conf.json','utf8')).version")
          PY='import tomllib,sys;print(tomllib.load(open("src-tauri/Cargo.toml","rb"))["package"]["version"])'
          CARGO=$(python3 -c "$PY")

          echo "Tag:             $TAG"
          echo "Tag version:     $VER"
          echo "package.json:    $PKG"
          echo "tauri.conf.json: $TAURI"
          echo "Cargo.toml:      $CARGO"

          if [ "$PKG" != "$VER" ] || [ "$TAURI" != "$VER" ] || [ "$CARGO" != "$VER" ]; then
            echo "‚ùå Version mismatch; make sure all files match tag v$VER"
            exit 1
          fi

      - name: Cache node_modules (primary)
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.pnpm-store
          key: verify-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
        continue-on-error: true

  build:
    name: Build ${{ matrix.platform }}
    needs: verify-versions
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux-x86_64
            os: ubuntu-latest
          - platform: macos-universal
            os: macos-latest
          - platform: windows-x86_64
            os: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      # Linux build deps for Tauri/Wry/WebKitGTK
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pkg-config \
            libglib2.0-dev \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install JS deps
        run: pnpm install --frozen-lockfile

      # Optional: cache cargo registry/builds to speed repeat builds
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      # Build & Release with Tauri action
      - name: Build and release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # macOS signing (optional; comment out if you don't sign)
          # TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          # TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: ${{ needs.verify-versions.outputs.tag }} # e.g. v0.3.2
          releaseName: "Quantus Miner ${{ needs.verify-versions.outputs.tag }}"
          releaseBody: "Automated Tauri release for ${{ needs.verify-versions.outputs.tag }}"
          releaseDraft: true
          prerelease: ${{ contains(needs.verify-versions.outputs.tag, '-') }}
          # If you want universal mac builds and NSIS on Windows, tauri-action auto-detects from config

      # Portable, user-space artifacts (no root/admin required)
      - name: Package Linux portable tar.gz
        if: matrix.os == 'ubuntu-latest'
        run: |
          tar -C src-tauri/target/release -czf quantus-miner-${{ needs.verify-versions.outputs.version }}-linux-x86_64.tar.gz quantus-miner

      - name: Upload Linux portable tar.gz
        if: matrix.os == 'ubuntu-latest'
        uses: softprops/action-gh-release@v2
        with:
          files: quantus-miner-${{ needs.verify-versions.outputs.version }}-linux-x86_64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Package Windows portable zip
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          $Version = "${{ needs.verify-versions.outputs.version }}"
          $Out = "quantus-miner-$Version-windows-x86_64.zip"
          Compress-Archive -Path "src-tauri\target\release\quantus-miner.exe" -DestinationPath $Out -Force

      - name: Upload Windows portable zip
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v2
        with:
          files: quantus-miner-${{ needs.verify-versions.outputs.version }}-windows-x86_64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
